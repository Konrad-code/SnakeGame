package com.snake.gui;

/**
 * @author Konrad ¯o³yñski | https://github.com/Konrad-code | konrad.zolynski@gmail.com | +48 533 683 168
**/

import java.awt.Color;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.sound.sampled.Clip;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

import com.snake.implementation.CRUD;
import com.snake.implementation.PlayerDAO;

public class GameSettingsFrame extends javax.swing.JFrame implements WindowListener {

	private PlayerDAO player;
    private final Color color = new Color(255, 128, 62);
    private final Color color2 = new Color(255, 128, 28);
    private final Color color3 = new Color(244, 166, 152);
    private Clip music = null;
    private ImageIcon gameIcon;
    private boolean ifTableExists = false;
    private boolean doesMusicPlay;
    
    public GameSettingsFrame(PlayerDAO player, Clip music, boolean doesMusicPlay) {
        initComponents();
        this.doesMusicPlay = doesMusicPlay;
        this.music = music;
        this.setLocationRelativeTo(null);
        this.addWindowListener(this);
        this.player = player;

        if(CRUD.checkIfTableExistsInDatabase())
            ifTableExists = true;
        if(!ifTableExists)
            button_logout.setEnabled(false);
        if(!player.getGameSettings().isIfMusic()) {
        	label_play.setEnabled(false);
        	label_stop.setEnabled(false);
        	doesMusicPlay = false;
        }
        if(player.isIfPlayerRoot())
        	button_adminMenu.setEnabled(true);

        gameIcon = new ImageIcon("img\\snake_min.png");
        setIconImage(gameIcon.getImage());
        Border border_panel_title = BorderFactory.createMatteBorder(0, 3, 3, 3, new Color(221, 97, 74));
        panel_title.setBorder(border_panel_title);
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        label_close.setBorder(border);
        label_minimize.setBorder(border);
        button_logout.setFocusPainted(false);

        Border border_button = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(221, 97, 74));
        button_logout.setBorder(border_button);
        button_quickPlay.setBorder(border_button);
        button_adminMenu.setBorder(border_button);
        button_play.setBorder(border_button);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup_walls = new javax.swing.ButtonGroup();
        buttonGroup_music = new javax.swing.ButtonGroup();
        buttonGroup_eclipse = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lab_iconSnake = new javax.swing.JLabel();
        label_play = new javax.swing.JLabel();
        label_stop = new javax.swing.JLabel();
        button_logout = new javax.swing.JButton();
        button_quickPlay = new javax.swing.JButton();
        button_adminMenu = new javax.swing.JButton();
        button_play = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        slider_speed = new javax.swing.JSlider();
        label_speedValue = new javax.swing.JLabel();
        label_speed = new javax.swing.JLabel();
        label_pointsValue = new javax.swing.JLabel();
        slider_points = new javax.swing.JSlider();
        label_points = new javax.swing.JLabel();
        label_powerup = new javax.swing.JLabel();
        slider_powerup = new javax.swing.JSlider();
        label_powerupValue = new javax.swing.JLabel();
        label_apples = new javax.swing.JLabel();
        slider_apples = new javax.swing.JSlider();
        label_applesValue = new javax.swing.JLabel();
        label_walls = new javax.swing.JLabel();
        radioButton_wallsOn = new javax.swing.JRadioButton();
        radioButton_wallsOff = new javax.swing.JRadioButton();
        label_music = new javax.swing.JLabel();
        radioButton_musicOn = new javax.swing.JRadioButton();
        radioButton_musicOff = new javax.swing.JRadioButton();
        label_eclipse = new javax.swing.JLabel();
        radioButton_eclipseOn = new javax.swing.JRadioButton();
        radioButton_eclipseOff = new javax.swing.JRadioButton();
        label_minimize = new javax.swing.JLabel();
        label_close = new javax.swing.JLabel();
        panel_title = new javax.swing.JPanel();
        label_settingsTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(221, 97, 74));

        jPanel2.setBackground(new java.awt.Color(244, 134, 104));

        jPanel3.setBackground(new java.awt.Color(244, 166, 152));

        lab_iconSnake.setBackground(new java.awt.Color(221, 97, 74));

        label_play.setBackground(new java.awt.Color(221, 97, 74));
        label_play.setText("label_rank");
        label_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_playMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                label_playMouseReleased(evt);
            }
        });

        label_stop.setBackground(new java.awt.Color(221, 97, 74));
        label_stop.setText("label_rank");
        label_stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_stopMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                label_stopMouseReleased(evt);
            }
        });

        button_logout.setBackground(new java.awt.Color(255, 128, 62));
        button_logout.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_logout.setForeground(new java.awt.Color(255, 255, 255));
        button_logout.setText("Logout");
        button_logout.setBorder(null);
        button_logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_logoutMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                button_logoutMouseReleased(evt);
            }
        });
        button_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_logoutActionPerformed(evt);
            }
        });

        button_quickPlay.setBackground(new java.awt.Color(255, 128, 62));
        button_quickPlay.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_quickPlay.setForeground(new java.awt.Color(255, 255, 255));
        button_quickPlay.setText("Quick Play");
        button_quickPlay.setBorder(null);
        button_quickPlay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_quickPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_quickPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_quickPlayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_quickPlayMouseExited(evt);
            }
        });
        button_quickPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_quickPlayActionPerformed(evt);
            }
        });

        button_adminMenu.setBackground(new java.awt.Color(255, 128, 62));
        button_adminMenu.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_adminMenu.setForeground(new java.awt.Color(255, 255, 255));
        button_adminMenu.setText("Admin menu");
        button_adminMenu.setBorder(null);
        button_adminMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_adminMenu.setEnabled(false);
        button_adminMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_adminMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_adminMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_adminMenuMouseExited(evt);
            }
        });
        button_adminMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_adminMenuActionPerformed(evt);
            }
        });

        button_play.setBackground(new java.awt.Color(255, 128, 62));
        button_play.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_play.setForeground(new java.awt.Color(255, 255, 255));
        button_play.setText("Play");
        button_play.setBorder(null);
        button_play.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_play.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_playMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_playMouseExited(evt);
            }
        });
        button_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_playActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 234, 238));
        jPanel4.setPreferredSize(new java.awt.Dimension(555, 229));

        slider_speed.setFont(new java.awt.Font("Franklin Gothic Book", 0, 12)); // NOI18N
        slider_speed.setMajorTickSpacing(30);
        slider_speed.setMaximum(150);
        slider_speed.setMinimum(60);
        slider_speed.setPaintLabels(true);
        slider_speed.setPaintTicks(true);
        slider_speed.setToolTipText("");
        slider_speed.setValue(80);
        slider_speed.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider_speed.setOpaque(false);

        label_speedValue.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_speedValue.setText("80");
        label_speedValue.setMinimumSize(new java.awt.Dimension(20, 20));

        label_speed.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_speed.setText("Speed");

        label_pointsValue.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_pointsValue.setText("1");
        label_pointsValue.setMinimumSize(new java.awt.Dimension(20, 20));

        slider_points.setFont(new java.awt.Font("Franklin Gothic Book", 0, 12)); // NOI18N
        slider_points.setMajorTickSpacing(5);
        slider_points.setMaximum(20);
        slider_points.setMinimum(1);
        slider_points.setPaintLabels(true);
        slider_points.setPaintTicks(true);
        slider_points.setToolTipText("");
        slider_points.setValue(1);
        slider_points.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider_points.setOpaque(false);

        label_points.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_points.setText("Points");

        label_powerup.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_powerup.setText("Powerup");

        slider_powerup.setFont(new java.awt.Font("Franklin Gothic Book", 0, 12)); // NOI18N
        slider_powerup.setMajorTickSpacing(1);
        slider_powerup.setMaximum(5);
        slider_powerup.setMinimum(1);
        slider_powerup.setPaintLabels(true);
        slider_powerup.setPaintTicks(true);
        slider_powerup.setToolTipText("");
        slider_powerup.setValue(1);
        slider_powerup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider_powerup.setOpaque(false);

        label_powerupValue.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_powerupValue.setText("1");
        label_powerupValue.setMinimumSize(new java.awt.Dimension(20, 20));

        label_apples.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_apples.setText("Apples");

        slider_apples.setFont(new java.awt.Font("Franklin Gothic Book", 0, 12)); // NOI18N
        slider_apples.setMajorTickSpacing(1);
        slider_apples.setMaximum(5);
        slider_apples.setMinimum(1);
        slider_apples.setPaintLabels(true);
        slider_apples.setPaintTicks(true);
        slider_apples.setToolTipText("");
        slider_apples.setValue(1);
        slider_apples.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider_apples.setOpaque(false);

        label_applesValue.setFont(new java.awt.Font("Franklin Gothic Book", 1, 16)); // NOI18N
        label_applesValue.setText("1");
        label_applesValue.setMinimumSize(new java.awt.Dimension(20, 20));

        label_walls.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        label_walls.setText("Walls:");

        buttonGroup_walls.add(radioButton_wallsOn);
        radioButton_wallsOn.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        radioButton_wallsOn.setSelected(true);
        radioButton_wallsOn.setText("on");
        radioButton_wallsOn.setOpaque(false);
        radioButton_wallsOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_wallsOnActionPerformed(evt);
            }
        });

        buttonGroup_walls.add(radioButton_wallsOff);
        radioButton_wallsOff.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        radioButton_wallsOff.setText("off");
        radioButton_wallsOff.setOpaque(false);
        radioButton_wallsOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_wallsOffActionPerformed(evt);
            }
        });

        label_music.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        label_music.setText("Music:");

        buttonGroup_music.add(radioButton_musicOn);
        radioButton_musicOn.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        radioButton_musicOn.setSelected(true);
        radioButton_musicOn.setText("on");
        radioButton_musicOn.setOpaque(false);
        radioButton_musicOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_musicOnActionPerformed(evt);
            }
        });

        buttonGroup_music.add(radioButton_musicOff);
        radioButton_musicOff.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        radioButton_musicOff.setText("off");
        radioButton_musicOff.setOpaque(false);
        radioButton_musicOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_musicOffActionPerformed(evt);
            }
        });

        label_eclipse.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        label_eclipse.setText("Eclipse:");

        buttonGroup_eclipse.add(radioButton_eclipseOn);
        radioButton_eclipseOn.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        radioButton_eclipseOn.setText("on");
        radioButton_eclipseOn.setOpaque(false);
        radioButton_eclipseOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_eclipseOnActionPerformed(evt);
            }
        });

        buttonGroup_eclipse.add(radioButton_eclipseOff);
        radioButton_eclipseOff.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        radioButton_eclipseOff.setSelected(true);
        radioButton_eclipseOff.setText("off");
        radioButton_eclipseOff.setOpaque(false);
        radioButton_eclipseOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_eclipseOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label_powerup, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(slider_powerup, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_powerupValue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_apples, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider_apples, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_applesValue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(label_walls)
                                .addGap(24, 24, 24)
                                .addComponent(radioButton_wallsOn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(radioButton_wallsOff, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(label_music)
                                .addGap(24, 24, 24)
                                .addComponent(radioButton_musicOn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioButton_musicOff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(label_speed, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(slider_speed, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_speedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(label_points, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(slider_points, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_pointsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label_eclipse)
                .addGap(24, 24, 24)
                .addComponent(radioButton_eclipseOn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioButton_eclipseOff, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider_speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_speed, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(label_pointsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider_points, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label_points, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label_speedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_powerup, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider_powerup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_powerupValue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(label_applesValue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider_apples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_apples, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_walls, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioButton_wallsOn)
                    .addComponent(radioButton_wallsOff)
                    .addComponent(label_music, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioButton_musicOn)
                    .addComponent(radioButton_musicOff))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_eclipse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioButton_eclipseOn)
                    .addComponent(radioButton_eclipseOff))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lab_iconSnake, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(141, 141, 141))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button_quickPlay, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                    .addComponent(button_play, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                    .addComponent(button_adminMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(button_logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(33, 33, 33)))
                        .addComponent(label_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(label_play, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(button_play, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_quickPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_adminMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lab_iconSnake, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label_play, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        lab_iconSnake.setIcon(new ImageIcon(getClass().getResource("/snake_min.png")));
        label_stop.setIcon(new ImageIcon(getClass().getResource("/stop.png")));
        label_play.setIcon(new ImageIcon(getClass().getResource("/play.png")));
        
        label_minimize.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label_minimize.setText(" -");
        label_minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        label_minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_minimizeMouseClicked(evt);
            }
        });

        label_close.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label_close.setText(" X");
        label_close.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        label_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_closeMouseClicked(evt);
            }
        });

        panel_title.setBackground(new java.awt.Color(183, 80, 61));

        label_settingsTitle.setFont(new java.awt.Font("Franklin Gothic Book", 1, 65)); // NOI18N
        label_settingsTitle.setForeground(new java.awt.Color(255, 255, 255));
        label_settingsTitle.setText("Settings");

        javax.swing.GroupLayout panel_titleLayout = new javax.swing.GroupLayout(panel_title);
        panel_title.setLayout(panel_titleLayout);
        panel_titleLayout.setHorizontalGroup(
            panel_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_titleLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(label_settingsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel_titleLayout.setVerticalGroup(
            panel_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_titleLayout.createSequentialGroup()
                .addComponent(label_settingsTitle)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panel_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(label_minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_close, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panel_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    // AFTER
    private void button_logoutActionPerformed(java.awt.event.ActionEvent evt) {                                              
        System.out.println("Logout button pushed");
        LoginFrame frame = new LoginFrame(doesMusicPlay);
        frame.setVisible(true);
        frame.pack();
        frame.setLocationRelativeTo(null);
        this.dispose();
    }                                             

    private void button_logoutMouseEntered(java.awt.event.MouseEvent evt) {                                           
        button_logout.setBackground(color2);
        button_logout.setForeground(color3);
    }                                          

    private void button_logoutMouseExited(java.awt.event.MouseEvent evt) {                                          
        button_logout.setBackground(color);
        button_logout.setForeground(Color.WHITE);
    }                                         

    private void label_stopMouseClicked(java.awt.event.MouseEvent evt) {                                        
        
    }                                       

    private void label_playMouseClicked(java.awt.event.MouseEvent evt) {                                        
        
    }                                       

    private void label_minimizeMouseClicked(java.awt.event.MouseEvent evt) {                                            
        this.setState(JFrame.ICONIFIED);
    }                                           

    private void label_closeMouseClicked(java.awt.event.MouseEvent evt) {                                         
        System.exit(0);
    }                                        

    private void label_stopMouseReleased(java.awt.event.MouseEvent evt) {                                         
        if(music.isRunning() && player.getGameSettings().isIfMusic()){
            music.stop();
            doesMusicPlay = false;
        }
    }                                        

    private void label_playMouseReleased(java.awt.event.MouseEvent evt) {                                         
        if(!music.isRunning() && player.getGameSettings().isIfMusic()){
            music.start();
            doesMusicPlay = true;
        }
    }                                        
    
    private void button_quickPlayMouseEntered(java.awt.event.MouseEvent evt) {                                              
        button_quickPlay.setBackground(color2);
        button_quickPlay.setForeground(color3);
    }                                             

    private void button_quickPlayMouseExited(java.awt.event.MouseEvent evt) {                                             
        button_quickPlay.setBackground(color);
        button_quickPlay.setForeground(Color.WHITE);
    }                                            

    private void button_quickPlayActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        System.out.println("Quick play button pushed");
        GameFrame frame = new GameFrame(player, music, doesMusicPlay);
        frame.setVisible(true);
        frame.pack();
        frame.setLocationRelativeTo(null);
        this.dispose();
    }                                                

    private void button_adminMenuMouseEntered(java.awt.event.MouseEvent evt) {                                              
        button_adminMenu.setBackground(color2);
        button_adminMenu.setForeground(color3);
    }                                             

    private void button_adminMenuMouseExited(java.awt.event.MouseEvent evt) {                                             
        button_adminMenu.setBackground(color);
        button_adminMenu.setForeground(Color.WHITE);
    }                                            

    private void button_adminMenuActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        if(player.isIfPlayerRoot()) {
        	AdminFrame frame = new AdminFrame(player, music, doesMusicPlay);
	        frame.setVisible(true);
	        frame.pack();
	        frame.setLocationRelativeTo(null);
	        this.dispose();
        }
    }                                                

    private void button_playMouseEntered(java.awt.event.MouseEvent evt) {                                         
        button_play.setBackground(color2);
        button_play.setForeground(color3);
    }                                        

    private void button_playMouseExited(java.awt.event.MouseEvent evt) {                                        
        button_play.setBackground(color);
        button_play.setForeground(Color.WHITE);
    }                                       

    private void button_playActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Play game button pushed");
        if(radioButton_eclipseOn.isSelected())
        	player.getGameSettings().setIfNarrowedView(true);
        else
        	player.getGameSettings().setIfNarrowedView(false);
        if(radioButton_musicOn.isSelected())
        	player.getGameSettings().setIfMusic(true);
        else
        	player.getGameSettings().setIfMusic(false);
        if(radioButton_wallsOn.isSelected())
        	player.getGameSettings().setIfMoveThroughWalls(true);
        else
        	player.getGameSettings().setIfMoveThroughWalls(false);
        player.getGameSettings().setGameSpeed(slider_speed.getValue());
        player.getGameSettings().setScoreForApple(slider_points.getValue());
        player.getGameSettings().setSpawnedApplesNo(slider_apples.getValue());
        player.getGameSettings().setSpawnedPowerupsNo(slider_powerup.getValue());
        GameFrame frame = new GameFrame(player, music, doesMusicPlay);
        frame.setVisible(true);
        frame.pack();
        frame.setLocationRelativeTo(null);
        this.dispose();
    }                                           

    private void button_logoutMouseReleased(java.awt.event.MouseEvent evt) {
    }                                           

    private void radioButton_wallsOnActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Radio button activating \"walk through walls\" mode pushed");
    }                                                   

    private void radioButton_wallsOffActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Radio button deactivating \"walk through walls\" mode pushed");
    }                                                    

    private void radioButton_musicOnActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Radio button activating music pushed");
    }                                                   

    private void radioButton_musicOffActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Radio button deactivating music pushed");
    }                                                    

    private void radioButton_eclipseOnActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Radio button activating eclipse mode pushed");
    }                                                     

    private void radioButton_eclipseOffActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("Radio button deactivating eclipse mode pushed");
    }                                                      

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup_eclipse;
    private javax.swing.ButtonGroup buttonGroup_music;
    private javax.swing.ButtonGroup buttonGroup_walls;
    private javax.swing.JButton button_adminMenu;
    private javax.swing.JButton button_logout;
    private javax.swing.JButton button_play;
    private javax.swing.JButton button_quickPlay;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lab_iconSnake;
    private javax.swing.JLabel label_apples;
    private javax.swing.JLabel label_applesValue;
    private javax.swing.JLabel label_close;
    private javax.swing.JLabel label_eclipse;
    private javax.swing.JLabel label_minimize;
    private javax.swing.JLabel label_music;
    private javax.swing.JLabel label_play;
    private javax.swing.JLabel label_points;
    private javax.swing.JLabel label_pointsValue;
    private javax.swing.JLabel label_powerup;
    private javax.swing.JLabel label_powerupValue;
    private javax.swing.JLabel label_settingsTitle;
    private javax.swing.JLabel label_speed;
    private javax.swing.JLabel label_speedValue;
    private javax.swing.JLabel label_stop;
    private javax.swing.JLabel label_walls;
    private javax.swing.JPanel panel_title;
    private javax.swing.JRadioButton radioButton_eclipseOff;
    private javax.swing.JRadioButton radioButton_eclipseOn;
    private javax.swing.JRadioButton radioButton_musicOff;
    private javax.swing.JRadioButton radioButton_musicOn;
    private javax.swing.JRadioButton radioButton_wallsOff;
    private javax.swing.JRadioButton radioButton_wallsOn;
    private javax.swing.JSlider slider_apples;
    private javax.swing.JSlider slider_points;
    private javax.swing.JSlider slider_powerup;
    private javax.swing.JSlider slider_speed;
    // End of variables declaration                   

    @Override
    public void windowOpened(WindowEvent e) {}
    @Override
    public void windowClosing(WindowEvent e) {}
    @Override
    public void windowClosed(WindowEvent e) {}
    @Override
    public void windowActivated(WindowEvent e) {}
    @Override
    public void windowDeactivated(WindowEvent e) {}
    
    @Override
    public void windowIconified(WindowEvent e) {
        if(music.isRunning() && player.getGameSettings().isIfMusic()){
            music.stop();
            System.out.println("Music stopped");
        }
        System.out.println("Window iconified");
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        if(!music.isRunning() && doesMusicPlay && player.getGameSettings().isIfMusic()){
            music.start();
            System.out.println("Music is back");
        }
        System.out.println("Window deiconified");
    }

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameSettingsFrame(new PlayerDAO(true), null, true).setVisible(true);
//                
//            }
//        });
//    }
}

