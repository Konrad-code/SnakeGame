package com.snake.gui;

/**
 * @author Konrad ¯o³yñski | https://github.com/Konrad-code | konrad.zolynski@gmail.com | +48 533 683 168
**/

import java.awt.Color;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.sound.sampled.Clip;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

import com.snake.implementation.CRUD;
import com.snake.implementation.PlayerDAO;
import com.snake.implementation.RankPosition;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;

public class RankingFrame extends javax.swing.JFrame implements WindowListener {

	private PlayerDAO player;
    private final Color color = new Color(255, 128, 62);
    private final Color color2 = new Color(255, 128, 28);
    private final Color color3 = new Color(244, 166, 152);
    private Clip music = null;
    private ImageIcon gameIcon;
    private boolean ifTableExists = false;
    private boolean doesMusicPlay;
    private String rankText1 = "ERR";
    private String rankText2 = "ERR";
    
    public RankingFrame(PlayerDAO player, Clip music, boolean doesMusicPlay) {
        initComponents();
        this.doesMusicPlay = doesMusicPlay;
        this.music = music;
        this.setLocationRelativeTo(null);
        this.addWindowListener(this);
        this.player = player;

        if(CRUD.checkIfTableExistsInDatabase())
            ifTableExists = true;
        if(!ifTableExists)
            button_logout.setEnabled(false);
        if(!player.getGameSettings().isIfMusic()) {
        	label_play.setEnabled(false);
        	label_stop.setEnabled(false);
        	doesMusicPlay = false;
        }
        if(player.getPlayerNickname().length() < 1)
        	button_logout.setEnabled(false);

        gameIcon = new ImageIcon("img\\snake_min.png");
        setIconImage(gameIcon.getImage());
        Border border_panel_title = BorderFactory.createMatteBorder(0, 3, 3, 3, new Color(221, 97, 74));
        panel_title.setBorder(border_panel_title);
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        label_close.setBorder(border);
        label_minimize.setBorder(border);
        button_logout.setFocusPainted(false);

        Border border_button = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(221, 97, 74));
        button_logout.setBorder(border_button);
        button_quickPlay.setBorder(border_button);
        button_gameSettings.setBorder(border_button);
        button_exit.setBorder(border_button);
        
        player.showRank();
        for (RankPosition p : player.getRanking()) {
			System.out.println("Position: " + p.getPosition() + " Nick: " + p.getNick() + " Score: " + p.getScore());
		}
        if(!player.getRanking().isEmpty()) {
        	rankText1 = this.prepareResults1();
        	rankText2 = this.prepareResults2();
        	label_rank.setText(rankText1);
        	label_rank2.setText(rankText2);
        }
    }
    
    private String prepareResults1() {
		StringBuilder rank1 = new StringBuilder("<html>");
		for (RankPosition position : player.getRanking()) {
			if (position.getPosition() < 6) {
				StringBuilder newPosition = new StringBuilder("");
				newPosition.append(position.getPosition() + ". ");
				newPosition.append(position.getNick() + " ");
				newPosition.append(position.getScore() + "<br/>");
				rank1.append(newPosition);
			}
		}
		rank1.append("</html>");
    	return rank1.toString();
    }
    
    private String prepareResults2() {
		StringBuilder rank2 = new StringBuilder("<html>");
		for (RankPosition position : player.getRanking()) {
			if (position.getPosition() >5 && position.getPosition() < 11) {
				StringBuilder newPosition = new StringBuilder("");
				newPosition.append(position.getPosition() + ". ");
				newPosition.append(position.getNick() + " ");
				newPosition.append(position.getScore() + "<br/>");
				rank2.append(newPosition);
			}
		}
		rank2.append("</html>");
    	return rank2.toString();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lab_iconSnake = new javax.swing.JLabel();
        label_play = new javax.swing.JLabel();
        label_stop = new javax.swing.JLabel();
        button_logout = new javax.swing.JButton();
        button_quickPlay = new javax.swing.JButton();
        button_gameSettings = new javax.swing.JButton();
        button_exit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        label_rank = new javax.swing.JLabel();
        label_rank2 = new javax.swing.JLabel();
        label_minimize = new javax.swing.JLabel();
        label_close = new javax.swing.JLabel();
        panel_title = new javax.swing.JPanel();
        label_rankingTitle = new javax.swing.JLabel();
        label_nickname = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(221, 97, 74));

        jPanel2.setBackground(new java.awt.Color(244, 134, 104));

        jPanel3.setBackground(new java.awt.Color(244, 166, 152));

        lab_iconSnake.setBackground(new java.awt.Color(221, 97, 74));

        label_play.setBackground(new java.awt.Color(221, 97, 74));
        label_play.setText("label_rank");
        label_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_playMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                label_playMouseReleased(evt);
            }
        });

        label_stop.setBackground(new java.awt.Color(221, 97, 74));
        label_stop.setText("label_rank");
        label_stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_stopMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                label_stopMouseReleased(evt);
            }
        });

        button_logout.setBackground(new java.awt.Color(255, 128, 62));
        button_logout.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_logout.setForeground(new java.awt.Color(255, 255, 255));
        button_logout.setText("Logout");
        button_logout.setBorder(null);
        button_logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_logoutMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                button_logoutMouseReleased(evt);
            }
        });
        button_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_logoutActionPerformed(evt);
            }
        });

        button_quickPlay.setBackground(new java.awt.Color(255, 128, 62));
        button_quickPlay.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_quickPlay.setForeground(new java.awt.Color(255, 255, 255));
        button_quickPlay.setText("Quick Play");
        button_quickPlay.setBorder(null);
        button_quickPlay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_quickPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_quickPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_quickPlayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_quickPlayMouseExited(evt);
            }
        });
        button_quickPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_quickPlayActionPerformed(evt);
            }
        });

        button_gameSettings.setBackground(new java.awt.Color(255, 128, 62));
        button_gameSettings.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_gameSettings.setForeground(new java.awt.Color(255, 255, 255));
        button_gameSettings.setText("Game Settings");
        button_gameSettings.setBorder(null);
        button_gameSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_gameSettings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_gameSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_gameSettingsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_gameSettingsMouseExited(evt);
            }
        });
        button_gameSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_gameSettingsActionPerformed(evt);
            }
        });

        button_exit.setBackground(new java.awt.Color(255, 128, 62));
        button_exit.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        button_exit.setForeground(new java.awt.Color(255, 255, 255));
        button_exit.setText("Exit");
        button_exit.setBorder(null);
        button_exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        button_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button_exitMouseExited(evt);
            }
        });
        button_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_exitActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 234, 238));
        jPanel4.setPreferredSize(new java.awt.Dimension(555, 229));

        label_rank.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        label_rank.setHorizontalAlignment(SwingConstants.LEFT);
        label_rank.setText("<html>\r\n1. Doe 25<br/>\r\n2. Queue 21<br/>\r\n3. mHm_MaXi 9999<br/>\r\n4. Williams 122<br/>\r\n5. Johnson 99</html>\r\n\r\n\r\n");

        label_rank2.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        label_rank2.setHorizontalAlignment(SwingConstants.LEFT);
        label_rank2.setText("<html>\r\n6. Smith 69<br/>\r\n7. Davis 0<br/>\r\n8. Fowler 74<br/>\r\n9. Waters 123<br/>\r\n10. SeriousGuy 38</html>\r\n\r\n\r\n");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4Layout.setHorizontalGroup(
        	jPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(label_rank, GroupLayout.PREFERRED_SIZE, 284, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(label_rank2, GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
        	jPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel4Layout.createSequentialGroup()
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(label_rank2, GroupLayout.PREFERRED_SIZE, 287, GroupLayout.PREFERRED_SIZE)
        				.addComponent(label_rank))
        			.addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4.setLayout(jPanel4Layout);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_gameSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(lab_iconSnake, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(141, 141, 141))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(button_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(33, 33, 33)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(button_quickPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)))
                                .addComponent(label_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(label_play, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(button_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(button_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_quickPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_gameSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lab_iconSnake, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label_play, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        
        lab_iconSnake.setIcon(new ImageIcon(getClass().getResource("/snake_min.png")));
        label_stop.setIcon(new ImageIcon(getClass().getResource("/stop.png")));
        label_play.setIcon(new ImageIcon(getClass().getResource("/play.png")));
        
        label_minimize.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label_minimize.setText(" -");
        label_minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        label_minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_minimizeMouseClicked(evt);
            }
        });

        label_close.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label_close.setText(" X");
        label_close.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        label_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_closeMouseClicked(evt);
            }
        });

        panel_title.setBackground(new java.awt.Color(183, 80, 61));

        label_rankingTitle.setFont(new java.awt.Font("Franklin Gothic Book", 1, 65)); // NOI18N
        label_rankingTitle.setForeground(new java.awt.Color(255, 255, 255));
        label_rankingTitle.setText("Ranking");

        javax.swing.GroupLayout panel_titleLayout = new javax.swing.GroupLayout(panel_title);
        panel_title.setLayout(panel_titleLayout);
        panel_titleLayout.setHorizontalGroup(
            panel_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_titleLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(label_rankingTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel_titleLayout.setVerticalGroup(
            panel_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_titleLayout.createSequentialGroup()
                .addComponent(label_rankingTitle)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        label_nickname.setBackground(new java.awt.Color(221, 97, 74));
        label_nickname.setText("label_rank");
        label_nickname.setIcon(new ImageIcon(getClass().getResource("/nickname.png")));
        
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(label_nickname, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panel_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(label_minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_close, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panel_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_nickname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    // AFTER
    private void button_logoutActionPerformed(java.awt.event.ActionEvent evt) {                                              
        System.out.println("Logout button pushed");
        LoginFrame frame = new LoginFrame(doesMusicPlay);
        frame.setVisible(true);
        frame.pack();
        frame.setLocationRelativeTo(null);
        music.stop();
        this.dispose();
    }                                             

    private void button_logoutMouseEntered(java.awt.event.MouseEvent evt) {                                           
        button_logout.setBackground(color2);
        button_logout.setForeground(color3);
    }                                          

    private void button_logoutMouseExited(java.awt.event.MouseEvent evt) {                                          
        button_logout.setBackground(color);
        button_logout.setForeground(Color.WHITE);
    }                                         

    private void label_stopMouseClicked(java.awt.event.MouseEvent evt) {                                        
        
    }                                       

    private void label_playMouseClicked(java.awt.event.MouseEvent evt) {                                        
        
    }                                       

    private void label_minimizeMouseClicked(java.awt.event.MouseEvent evt) {                                            
        this.setState(JFrame.ICONIFIED);
    }                                           

    private void label_closeMouseClicked(java.awt.event.MouseEvent evt) {                                         
        System.exit(0);
    }                                        

    private void label_stopMouseReleased(java.awt.event.MouseEvent evt) {                                         
        if(music.isRunning() && player.getGameSettings().isIfMusic()){
            music.stop();
            doesMusicPlay = false;
        }
    }                                        

    private void label_playMouseReleased(java.awt.event.MouseEvent evt) {                                         
        if(!music.isRunning() && player.getGameSettings().isIfMusic()){
            music.start();
            doesMusicPlay = true;
        }
    }                                        

    private void button_quickPlayMouseEntered(java.awt.event.MouseEvent evt) {                                              
        button_quickPlay.setBackground(color2);
        button_quickPlay.setForeground(color3);
    }                                             

    private void button_quickPlayMouseExited(java.awt.event.MouseEvent evt) {                                             
        button_quickPlay.setBackground(color);
        button_quickPlay.setForeground(Color.WHITE);
    }                                            

    private void button_quickPlayActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        System.out.println("Quick play button pushed");
        GameFrame frame = new GameFrame(player, music, doesMusicPlay);
        frame.setVisible(true);
        frame.pack();
        frame.setLocationRelativeTo(null);
        this.dispose();
    }                                                

    private void button_gameSettingsMouseEntered(java.awt.event.MouseEvent evt) {                                                 
        button_gameSettings.setBackground(color2);
        button_gameSettings.setForeground(color3);
    }                                                

    private void button_gameSettingsMouseExited(java.awt.event.MouseEvent evt) {                                                
        button_gameSettings.setBackground(color);
        button_gameSettings.setForeground(Color.WHITE);
    }                                               

    private void button_gameSettingsActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        System.out.println("Game settings button pushed");
        GameSettingsFrame frame = new GameSettingsFrame(player, music, doesMusicPlay);
        frame.setVisible(true);
        frame.pack();
        frame.setLocationRelativeTo(null);
        this.dispose();
    }                                                   

    private void button_exitMouseEntered(java.awt.event.MouseEvent evt) {                                         
        button_exit.setBackground(color2);
        button_exit.setForeground(color3);
    }                                        

    private void button_exitMouseExited(java.awt.event.MouseEvent evt) {                                        
        button_exit.setBackground(color);
        button_exit.setForeground(Color.WHITE);
    }                                       

    private void button_exitActionPerformed(java.awt.event.ActionEvent evt) {                                            
        System.exit(0);
    }                                           

    private void button_logoutMouseReleased(java.awt.event.MouseEvent evt) {                                            
    }                                           

    // Variables declaration - do not modify                     
    private javax.swing.JButton button_exit;
    private javax.swing.JButton button_gameSettings;
    private javax.swing.JButton button_logout;
    private javax.swing.JButton button_quickPlay;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lab_iconSnake;
    private javax.swing.JLabel label_close;
    private javax.swing.JLabel label_minimize;
    private javax.swing.JLabel label_nickname;
    private javax.swing.JLabel label_play;
    private javax.swing.JLabel label_rank;
    private javax.swing.JLabel label_rank2;
    private javax.swing.JLabel label_rankingTitle;
    private javax.swing.JLabel label_stop;
    private javax.swing.JPanel panel_title;
    // End of variables declaration                   

    @Override
    public void windowOpened(WindowEvent e) {}
    @Override
    public void windowClosing(WindowEvent e) {}
    @Override
    public void windowClosed(WindowEvent e) {}
    @Override
    public void windowActivated(WindowEvent e) {}
    @Override
    public void windowDeactivated(WindowEvent e) {}
    
    @Override
    public void windowIconified(WindowEvent e) {
        if(music.isRunning() && player.getGameSettings().isIfMusic()){
            music.stop();
            System.out.println("Music stopped");
        }
        System.out.println("Window iconified");
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        if(!music.isRunning() && doesMusicPlay && player.getGameSettings().isIfMusic()){
            music.start();
            System.out.println("Music is back");
        }
        System.out.println("Window deiconified");
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RankingFrame(new PlayerDAO(true), null, true).setVisible(true);
//                
//            }
//        });
//    } 
}

